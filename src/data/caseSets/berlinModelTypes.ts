/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "clinicalFinding".
 */
export type ClinicalFinding =
  | IncreasedFrequencyOfUrination
  | Heartburn
  | AbdominalPain
  | BloodInUrine
  | Fever
  | Vomiting
  | Dysuria
  | Diarrhea
  | WeightLoss;
/**
 * Presence of the clinical finding
 *
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "clinicalFindingState".
 */
export type ClinicalFindingState = "present" | "absent" | "unsure";
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "condition".
 */
export type Condition =
  | IBDFirstPresentationNonFlare
  | GERD
  | SimpleUTI
  | ViralGE
  | BladderCancerFirstPresentation
  | AcuteCholecystitis
  | Appendicitis
  | EctopicPregnancy
  | IBS
  | AcutePyelonephritis
  | AbdoPainNOSIdiopathic;
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "biologicalSex".
 */
export type BiologicalSex = "male" | "female";
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "expectedTriageLevel".
 */
export type ExpectedTriageLevel = "EC" | "PC" | "SC";
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "attribute".
 */
export type Attribute = TimeSinceOnset6 | FindingSite1 | CharacteristicOfPain1 | PainIntensity1 | ContentsOfStool1;
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "value".
 */
export type Value = Blood1 | Mucus1 | Water1;

/**
 * FGAI4H TG Symptom Cases Schema â€“ Berlin (generated)
 */
export interface BerlinModelCasesSchema {
  /**
   * Case set ID
   */
  id?: string;
  /**
   * Case set name
   */
  name: string;
  cases: [Case, ...Case[]];
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "case".
 */
export interface Case {
  metaData: {
    /**
     * Short human readable case name
     */
    name: string;
    /**
     * Human readable case description
     */
    description?: string;
    /**
     * Company and/or individual identifier of the case's creator
     */
    caseCreator?: string;
    /**
     * Identifier of this case in the originating spreadsheet
     */
    spreadsheetCaseId?: string;
  };
  caseData: {
    /**
     * Patient profile information
     */
    profileInformation: {
      /**
       * Age
       */
      age: number;
      /**
       * Biological sex
       */
      biologicalSex: "male" | "female";
    };
    presentingComplaints: [ClinicalFinding];
    otherFeatures: ClinicalFinding[];
  };
  valuesToPredict: {
    /**
     * Expected triage level
     */
    expectedTriageLevel: "EC" | "PC" | "SC";
    expectedCondition: Condition;
    otherRelevantDifferentials: Condition[];
    impossibleConditions: Condition[];
    correctCondition?: Condition;
  };
}
export interface IncreasedFrequencyOfUrination {
  /**
   * Clinical finding ID
   */
  id: string;
  /**
   * Clinical finding name
   */
  name: string;
  /**
   * URIs referencing this clinical finding in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  state: ClinicalFindingState;
  attributes: unknown[];
}
export interface Heartburn {
  /**
   * Clinical finding ID
   */
  id: string;
  /**
   * Clinical finding name
   */
  name: string;
  /**
   * URIs referencing this clinical finding in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  state: ClinicalFindingState;
  attributes: TimeSinceOnset[];
}
export interface TimeSinceOnset {
  /**
   * Attribute ID
   */
  id: string;
  /**
   * Attribute name
   */
  name: string;
  /**
   * URIs referencing this attribute in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  /**
   * Possible values for this attribute (exactly one)
   */
  value: LessThanADay | ACoupleDays12Days | DaysTo1Week | AFewWeeks1Weeks1Month | MonthTo1Year | AYearOrMore;
  /**
   * ID of clinical finding this attribute is scoped to
   */
  scope?: string;
}
export interface LessThanADay {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface ACoupleDays12Days {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface DaysTo1Week {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface AFewWeeks1Weeks1Month {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface MonthTo1Year {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface AYearOrMore {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface AbdominalPain {
  /**
   * Clinical finding ID
   */
  id: string;
  /**
   * Clinical finding name
   */
  name: string;
  /**
   * URIs referencing this clinical finding in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  state: ClinicalFindingState;
  attributes: (FindingSite | CharacteristicOfPain | PainIntensity | TimeSinceOnset1)[];
}
export interface FindingSite {
  /**
   * Attribute ID
   */
  id: string;
  /**
   * Attribute name
   */
  name: string;
  /**
   * URIs referencing this attribute in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  /**
   * Possible values for this attribute (at least one, multi-selection possible)
   */
  values: [
    (
      | Generalised
      | UpperRight
      | UpperLeft
      | Epigastric
      | LowerRight
      | LowerLeft
      | Hypogastric
      | RightLoin
      | LeftLoin
      | Central
    ),
    ...(
      | Generalised
      | UpperRight
      | UpperLeft
      | Epigastric
      | LowerRight
      | LowerLeft
      | Hypogastric
      | RightLoin
      | LeftLoin
      | Central
    )[]
  ];
  /**
   * ID of clinical finding this attribute is scoped to
   */
  scope?: string;
}
export interface Generalised {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface UpperRight {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface UpperLeft {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface Epigastric {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface LowerRight {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface LowerLeft {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface Hypogastric {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface RightLoin {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface LeftLoin {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface Central {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface CharacteristicOfPain {
  /**
   * Attribute ID
   */
  id: string;
  /**
   * Attribute name
   */
  name: string;
  /**
   * URIs referencing this attribute in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  /**
   * Possible values for this attribute (exactly one)
   */
  value: Cramping | Dull | Sharp;
  /**
   * ID of clinical finding this attribute is scoped to
   */
  scope?: string;
}
export interface Cramping {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface Dull {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface Sharp {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface PainIntensity {
  /**
   * Attribute ID
   */
  id: string;
  /**
   * Attribute name
   */
  name: string;
  /**
   * URIs referencing this attribute in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  /**
   * Possible values for this attribute (exactly one)
   */
  value: Mild | Moderate | Severe;
  /**
   * ID of clinical finding this attribute is scoped to
   */
  scope?: string;
}
export interface Mild {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface Moderate {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface Severe {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface TimeSinceOnset1 {
  /**
   * Attribute ID
   */
  id: string;
  /**
   * Attribute name
   */
  name: string;
  /**
   * URIs referencing this attribute in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  /**
   * Possible values for this attribute (exactly one)
   */
  value: LessThanADay | ACoupleDays12Days | DaysTo1Week | AFewWeeks1Weeks1Month | MonthTo1Year | AYearOrMore;
  /**
   * ID of clinical finding this attribute is scoped to
   */
  scope?: string;
}
export interface BloodInUrine {
  /**
   * Clinical finding ID
   */
  id: string;
  /**
   * Clinical finding name
   */
  name: string;
  /**
   * URIs referencing this clinical finding in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  state: ClinicalFindingState;
  attributes: TimeSinceOnset2[];
}
export interface TimeSinceOnset2 {
  /**
   * Attribute ID
   */
  id: string;
  /**
   * Attribute name
   */
  name: string;
  /**
   * URIs referencing this attribute in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  /**
   * Possible values for this attribute (exactly one)
   */
  value: LessThanADay | ACoupleDays12Days | DaysTo1Week | AFewWeeks1Weeks1Month | MonthTo1Year | AYearOrMore;
  /**
   * ID of clinical finding this attribute is scoped to
   */
  scope?: string;
}
export interface Fever {
  /**
   * Clinical finding ID
   */
  id: string;
  /**
   * Clinical finding name
   */
  name: string;
  /**
   * URIs referencing this clinical finding in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  state: ClinicalFindingState;
  attributes: unknown[];
}
export interface Vomiting {
  /**
   * Clinical finding ID
   */
  id: string;
  /**
   * Clinical finding name
   */
  name: string;
  /**
   * URIs referencing this clinical finding in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  state: ClinicalFindingState;
  attributes: TimeSinceOnset3[];
}
export interface TimeSinceOnset3 {
  /**
   * Attribute ID
   */
  id: string;
  /**
   * Attribute name
   */
  name: string;
  /**
   * URIs referencing this attribute in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  /**
   * Possible values for this attribute (exactly one)
   */
  value: LessThanADay | ACoupleDays12Days | DaysTo1Week | AFewWeeks1Weeks1Month | MonthTo1Year | AYearOrMore;
  /**
   * ID of clinical finding this attribute is scoped to
   */
  scope?: string;
}
export interface Dysuria {
  /**
   * Clinical finding ID
   */
  id: string;
  /**
   * Clinical finding name
   */
  name: string;
  /**
   * URIs referencing this clinical finding in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  state: ClinicalFindingState;
  attributes: TimeSinceOnset4[];
}
export interface TimeSinceOnset4 {
  /**
   * Attribute ID
   */
  id: string;
  /**
   * Attribute name
   */
  name: string;
  /**
   * URIs referencing this attribute in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  /**
   * Possible values for this attribute (exactly one)
   */
  value: LessThanADay | ACoupleDays12Days | DaysTo1Week | AFewWeeks1Weeks1Month | MonthTo1Year | AYearOrMore;
  /**
   * ID of clinical finding this attribute is scoped to
   */
  scope?: string;
}
export interface Diarrhea {
  /**
   * Clinical finding ID
   */
  id: string;
  /**
   * Clinical finding name
   */
  name: string;
  /**
   * URIs referencing this clinical finding in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  state: ClinicalFindingState;
  attributes: (ContentsOfStool | TimeSinceOnset5)[];
}
export interface ContentsOfStool {
  /**
   * Attribute ID
   */
  id: string;
  /**
   * Attribute name
   */
  name: string;
  /**
   * URIs referencing this attribute in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  /**
   * Possible values for this attribute (at least one, multi-selection possible)
   */
  values: [Blood | Mucus | Water, ...(Blood | Mucus | Water)[]];
  /**
   * ID of clinical finding this attribute is scoped to
   */
  scope?: string;
}
export interface Blood {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface Mucus {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface Water {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface TimeSinceOnset5 {
  /**
   * Attribute ID
   */
  id: string;
  /**
   * Attribute name
   */
  name: string;
  /**
   * URIs referencing this attribute in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  /**
   * Possible values for this attribute (exactly one)
   */
  value: LessThanADay | ACoupleDays12Days | DaysTo1Week | AFewWeeks1Weeks1Month | MonthTo1Year | AYearOrMore;
  /**
   * ID of clinical finding this attribute is scoped to
   */
  scope?: string;
}
export interface WeightLoss {
  /**
   * Clinical finding ID
   */
  id: string;
  /**
   * Clinical finding name
   */
  name: string;
  /**
   * URIs referencing this clinical finding in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  state: ClinicalFindingState;
  attributes: unknown[];
}
export interface IBDFirstPresentationNonFlare {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface GERD {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface SimpleUTI {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface ViralGE {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface BladderCancerFirstPresentation {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface AcuteCholecystitis {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface Appendicitis {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface EctopicPregnancy {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface IBS {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface AcutePyelonephritis {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface AbdoPainNOSIdiopathic {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface TimeSinceOnset6 {
  /**
   * Attribute ID
   */
  id: string;
  /**
   * Attribute name
   */
  name: string;
  /**
   * URIs referencing this attribute in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  /**
   * Possible values for this attribute (exactly one)
   */
  value: LessThanADay | ACoupleDays12Days | DaysTo1Week | AFewWeeks1Weeks1Month | MonthTo1Year | AYearOrMore;
  /**
   * ID of clinical finding this attribute is scoped to
   */
  scope?: string;
}
export interface FindingSite1 {
  /**
   * Attribute ID
   */
  id: string;
  /**
   * Attribute name
   */
  name: string;
  /**
   * URIs referencing this attribute in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  /**
   * Possible values for this attribute (at least one, multi-selection possible)
   */
  values: [
    (
      | Generalised
      | UpperRight
      | UpperLeft
      | Epigastric
      | LowerRight
      | LowerLeft
      | Hypogastric
      | RightLoin
      | LeftLoin
      | Central
    ),
    ...(
      | Generalised
      | UpperRight
      | UpperLeft
      | Epigastric
      | LowerRight
      | LowerLeft
      | Hypogastric
      | RightLoin
      | LeftLoin
      | Central
    )[]
  ];
  /**
   * ID of clinical finding this attribute is scoped to
   */
  scope?: string;
}
export interface CharacteristicOfPain1 {
  /**
   * Attribute ID
   */
  id: string;
  /**
   * Attribute name
   */
  name: string;
  /**
   * URIs referencing this attribute in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  /**
   * Possible values for this attribute (exactly one)
   */
  value: Cramping | Dull | Sharp;
  /**
   * ID of clinical finding this attribute is scoped to
   */
  scope?: string;
}
export interface PainIntensity1 {
  /**
   * Attribute ID
   */
  id: string;
  /**
   * Attribute name
   */
  name: string;
  /**
   * URIs referencing this attribute in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  /**
   * Possible values for this attribute (exactly one)
   */
  value: Mild | Moderate | Severe;
  /**
   * ID of clinical finding this attribute is scoped to
   */
  scope?: string;
}
export interface ContentsOfStool1 {
  /**
   * Attribute ID
   */
  id: string;
  /**
   * Attribute name
   */
  name: string;
  /**
   * URIs referencing this attribute in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  /**
   * Possible values for this attribute (at least one, multi-selection possible)
   */
  values: [Blood | Mucus | Water, ...(Blood | Mucus | Water)[]];
  /**
   * ID of clinical finding this attribute is scoped to
   */
  scope?: string;
}
export interface Blood1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface Mucus1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
export interface Water1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "2827c3412389f50313f873f8a0de44d6".
 */
export interface IBDFirstPresentationNonFlare1 {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "23334e278d34e6394e763c05e8ba13c8".
 */
export interface GERD1 {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "84e38911d4dadafc033e196683720b70".
 */
export interface SimpleUTI1 {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "817ce20937adbd22595275ddfa572a6e".
 */
export interface ViralGE1 {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "7f2657a0f5b61e32b6867bd215b4a41e".
 */
export interface BladderCancerFirstPresentation1 {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "af900dbf0fcecf02e5b7f70bbd10ea44".
 */
export interface AcuteCholecystitis1 {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "9d27455f69d907a7dad7bb471f3717a4".
 */
export interface Appendicitis1 {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "9a40d00e1b3ae580a85fb303778873ca".
 */
export interface EctopicPregnancy1 {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "715d4aa3c75953768e71eb85c74a79d6".
 */
export interface IBS1 {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "b94c486b512b29cfcece35fcf417ecfd".
 */
export interface AcutePyelonephritis1 {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "e158fc5e03298d772a8b7db69517800e".
 */
export interface AbdoPainNOSIdiopathic1 {
  /**
   * Condition ID
   */
  id: string;
  /**
   * Condition name
   */
  name: string;
  /**
   * URIs referencing this condition in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "5d60ebfd3b9ee2a12b816a66cd0d98e6".
 */
export interface IncreasedFrequencyOfUrination1 {
  /**
   * Clinical finding ID
   */
  id: string;
  /**
   * Clinical finding name
   */
  name: string;
  /**
   * URIs referencing this clinical finding in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  state: ClinicalFindingState;
  attributes: unknown[];
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "bed900f01bde98f8d8a9d5a10bcca20e".
 */
export interface Heartburn1 {
  /**
   * Clinical finding ID
   */
  id: string;
  /**
   * Clinical finding name
   */
  name: string;
  /**
   * URIs referencing this clinical finding in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  state: ClinicalFindingState;
  attributes: TimeSinceOnset[];
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "7a0ca5ec6baf2cfb7e516f031a9e5d3c".
 */
export interface TimeSinceOnset7 {
  /**
   * Attribute ID
   */
  id: string;
  /**
   * Attribute name
   */
  name: string;
  /**
   * URIs referencing this attribute in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  /**
   * Possible values for this attribute (exactly one)
   */
  value: LessThanADay | ACoupleDays12Days | DaysTo1Week | AFewWeeks1Weeks1Month | MonthTo1Year | AYearOrMore;
  /**
   * ID of clinical finding this attribute is scoped to
   */
  scope?: string;
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "f531a0d969119b7ab1f8e76424516fed".
 */
export interface AbdominalPain1 {
  /**
   * Clinical finding ID
   */
  id: string;
  /**
   * Clinical finding name
   */
  name: string;
  /**
   * URIs referencing this clinical finding in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  state: ClinicalFindingState;
  attributes: (FindingSite | CharacteristicOfPain | PainIntensity | TimeSinceOnset1)[];
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "912499c82bb217348cd56c98095fe844".
 */
export interface FindingSite2 {
  /**
   * Attribute ID
   */
  id: string;
  /**
   * Attribute name
   */
  name: string;
  /**
   * URIs referencing this attribute in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  /**
   * Possible values for this attribute (at least one, multi-selection possible)
   */
  values: [
    (
      | Generalised
      | UpperRight
      | UpperLeft
      | Epigastric
      | LowerRight
      | LowerLeft
      | Hypogastric
      | RightLoin
      | LeftLoin
      | Central
    ),
    ...(
      | Generalised
      | UpperRight
      | UpperLeft
      | Epigastric
      | LowerRight
      | LowerLeft
      | Hypogastric
      | RightLoin
      | LeftLoin
      | Central
    )[]
  ];
  /**
   * ID of clinical finding this attribute is scoped to
   */
  scope?: string;
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "7ede29da24bd64547ef1eb7cd5ae2d8e".
 */
export interface CharacteristicOfPain2 {
  /**
   * Attribute ID
   */
  id: string;
  /**
   * Attribute name
   */
  name: string;
  /**
   * URIs referencing this attribute in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  /**
   * Possible values for this attribute (exactly one)
   */
  value: Cramping | Dull | Sharp;
  /**
   * ID of clinical finding this attribute is scoped to
   */
  scope?: string;
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "0908b0d8834918b9586a70bca644dcee".
 */
export interface PainIntensity2 {
  /**
   * Attribute ID
   */
  id: string;
  /**
   * Attribute name
   */
  name: string;
  /**
   * URIs referencing this attribute in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  /**
   * Possible values for this attribute (exactly one)
   */
  value: Mild | Moderate | Severe;
  /**
   * ID of clinical finding this attribute is scoped to
   */
  scope?: string;
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "1eac2373d00170c7eff9aa2ce2c683ce".
 */
export interface BloodInUrine1 {
  /**
   * Clinical finding ID
   */
  id: string;
  /**
   * Clinical finding name
   */
  name: string;
  /**
   * URIs referencing this clinical finding in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  state: ClinicalFindingState;
  attributes: TimeSinceOnset2[];
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "3e9a9aad2f3ad7fc49aa1a8b165e146b".
 */
export interface Fever1 {
  /**
   * Clinical finding ID
   */
  id: string;
  /**
   * Clinical finding name
   */
  name: string;
  /**
   * URIs referencing this clinical finding in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  state: ClinicalFindingState;
  attributes: unknown[];
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "356aee0186422335720c9763ac4ca492".
 */
export interface Vomiting1 {
  /**
   * Clinical finding ID
   */
  id: string;
  /**
   * Clinical finding name
   */
  name: string;
  /**
   * URIs referencing this clinical finding in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  state: ClinicalFindingState;
  attributes: TimeSinceOnset3[];
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "b2003899e659fd3b4b9ccfdcc731d5e8".
 */
export interface Dysuria1 {
  /**
   * Clinical finding ID
   */
  id: string;
  /**
   * Clinical finding name
   */
  name: string;
  /**
   * URIs referencing this clinical finding in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  state: ClinicalFindingState;
  attributes: TimeSinceOnset4[];
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "0ef0fec76d1338c74680ae2b685c2d87".
 */
export interface Diarrhea1 {
  /**
   * Clinical finding ID
   */
  id: string;
  /**
   * Clinical finding name
   */
  name: string;
  /**
   * URIs referencing this clinical finding in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  state: ClinicalFindingState;
  attributes: (ContentsOfStool | TimeSinceOnset5)[];
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "007f56da752f6cda2cfc689947361040".
 */
export interface ContentsOfStool2 {
  /**
   * Attribute ID
   */
  id: string;
  /**
   * Attribute name
   */
  name: string;
  /**
   * URIs referencing this attribute in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  /**
   * Possible values for this attribute (at least one, multi-selection possible)
   */
  values: [Blood | Mucus | Water, ...(Blood | Mucus | Water)[]];
  /**
   * ID of clinical finding this attribute is scoped to
   */
  scope?: string;
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "14026f513eaff27d02b60f2247322d82".
 */
export interface WeightLoss1 {
  /**
   * Clinical finding ID
   */
  id: string;
  /**
   * Clinical finding name
   */
  name: string;
  /**
   * URIs referencing this clinical finding in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
  state: ClinicalFindingState;
  attributes: unknown[];
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "15fb0cb28034c1adb8ab0703eff7720f".
 */
export interface LessThanADay1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "f6b731832f9c37cd8583c6297105603f".
 */
export interface ACoupleDays12Days1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "4395912053989fa30a3b041f1fb90a23".
 */
export interface DaysTo1Week1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "5c11d4b071bd042b5123c52d80c07d84".
 */
export interface AFewWeeks1Weeks1Month1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "41c86c25696136347b84354a5e120cbf".
 */
export interface MonthTo1Year1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "b505858ef0a749e5d6dca106cd31ae52".
 */
export interface AYearOrMore1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "1aa7de133b931280af20f9c5db5fc8e6".
 */
export interface Generalised1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "e7b0ba68e1d6fd5da9373be3bbf6155f".
 */
export interface UpperRight1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "40f7d9c6a9c1f51b0920eef6d0afad59".
 */
export interface UpperLeft1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "dd209743df0b8f89310fa6d89d93c8af".
 */
export interface Epigastric1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "90de79b7ba2d0c789962d19aaa69d902".
 */
export interface LowerRight1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "4d095029a3c3092faf2c0470817c5080".
 */
export interface LowerLeft1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "99b4b398893523cf4d3f66f32b6582a1".
 */
export interface Hypogastric1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "d48ec3d760438b06df37996563a67b6b".
 */
export interface RightLoin1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "eefc70b83609ea58e033bfdcb3502081".
 */
export interface LeftLoin1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "a9ec43e1b2d6d86b156abe0f4c21e492".
 */
export interface Central1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "4403bcc436c90f18e489150ca0e37ab9".
 */
export interface Cramping1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "d307bfff5a7c185189e1a364c8ec0878".
 */
export interface Dull1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "85e41619889e1675f5924245896ad38a".
 */
export interface Sharp1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "dfe94145865b065bd5341aa7e3cbbde3".
 */
export interface Mild1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "5622e2233ff9944412b2161ae720fff9".
 */
export interface Moderate1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "a95ec8ac80d2ea45f314b7224da6a7e6".
 */
export interface Severe1 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "413a0ad1b7bc7a981570c381eec775ce".
 */
export interface Blood2 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "cac61882e362c96310043bd2628d7201".
 */
export interface Mucus2 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
/**
 * This interface was referenced by `BerlinModelCasesSchema`'s JSON-Schema
 * via the `definition` "0eb1f3b8c62c0393cfad9b2c1dea44c7".
 */
export interface Water2 {
  /**
   * Value ID
   */
  id: string;
  /**
   * Value name
   */
  name: string;
  /**
   * URIs referencing this value in standard ontologies
   */
  standardOntologyUris: {
    [k: string]: unknown;
  };
}
